diff --git a/client/package-lock.json b/client/package-lock.json
index 5172b71..f2cfd52 100644
--- a/client/package-lock.json
+++ b/client/package-lock.json
@@ -9,7 +9,11 @@
       "version": "0.1.0",
       "dependencies": {
         "@apirtc/apirtc": "^5.0.19",
+        "@emotion/react": "^11.11.3",
+        "@emotion/styled": "^11.11.0",
         "@fortawesome/fontawesome-free": "^6.5.1",
+        "@mui/joy": "^5.0.0-beta.24",
+        "@mui/material": "^5.15.6",
         "@react-oauth/google": "^0.12.1",
         "@reduxjs/toolkit": "^2.0.1",
         "@stripe/react-stripe-js": "^2.4.0",
@@ -43,7 +47,7 @@
         "react-redux": "^9.0.4",
         "react-responsive-carousel": "^3.2.23",
         "react-router-dom": "^6.21.0",
-        "react-scripts": "5.0.1",
+        "react-scripts": "^5.0.1",
         "react-shepherd": "^4.2.0",
         "react-timer-hook": "^3.0.7",
         "react-toastify": "^9.1.3",
@@ -218,9 +222,9 @@
       }
     },
     "node_modules/@babel/eslint-parser": {
-      "version": "7.23.3",
-      "resolved": "https://registry.npmjs.org/@babel/eslint-parser/-/eslint-parser-7.23.3.tgz",
-      "integrity": "sha512-9bTuNlyx7oSstodm1cR1bECj4fkiknsDa1YniISkJemMY3DGhJNYBECbe6QD/q54mp2J8VO66jW3/7uP//iFCw==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/eslint-parser/-/eslint-parser-7.23.9.tgz",
+      "integrity": "sha512-xPndlO7qxiJbn0ATvfXQBjCS7qApc9xmKHArgI/FTEFxXas5dnjC/VqM37lfZun9dclRYcn+YQAr6uDFy0bB2g==",
       "dependencies": {
         "@nicolo-ribaudo/eslint-scope-5-internals": "5.1.1-v1",
         "eslint-visitor-keys": "^2.1.0",
@@ -310,9 +314,9 @@
       }
     },
     "node_modules/@babel/helper-create-class-features-plugin": {
-      "version": "7.23.7",
-      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.23.7.tgz",
-      "integrity": "sha512-xCoqR/8+BoNnXOY7RVSgv6X+o7pmT5q1d+gGcRlXYkI+9B31glE4jeejhKVpA04O1AtzOt7OSQ6VYKP5FcRl9g==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.23.9.tgz",
+      "integrity": "sha512-B2L9neXTIyPQoXDm+NtovPvG6VOLWnaXu3BIeVDWwdKFgG30oNa6CqVGiJPDWQwIAK49t9gnQI9c6K6RzabiKw==",
       "dependencies": {
         "@babel/helper-annotate-as-pure": "^7.22.5",
         "@babel/helper-environment-visitor": "^7.22.20",
@@ -364,9 +368,9 @@
       }
     },
     "node_modules/@babel/helper-define-polyfill-provider": {
-      "version": "0.4.4",
-      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.4.4.tgz",
-      "integrity": "sha512-QcJMILQCu2jm5TFPGA3lCpJJTeEP+mqeXooG/NZbg/h5FTFi6V0+99ahlRsW8/kRLyb24LZVCCiclDedhLKcBA==",
+      "version": "0.5.0",
+      "resolved": "https://registry.npmjs.org/@babel/helper-define-polyfill-provider/-/helper-define-polyfill-provider-0.5.0.tgz",
+      "integrity": "sha512-NovQquuQLAQ5HuyjCz7WQP9MjRj7dx++yspwiyUiGl9ZyadHRSql1HZh5ogRd8W8w6YM6EQ/NTB8rgjLt5W65Q==",
       "dependencies": {
         "@babel/helper-compilation-targets": "^7.22.6",
         "@babel/helper-plugin-utils": "^7.22.5",
@@ -733,11 +737,11 @@
       }
     },
     "node_modules/@babel/plugin-proposal-decorators": {
-      "version": "7.23.7",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.23.7.tgz",
-      "integrity": "sha512-b1s5JyeMvqj7d9m9KhJNHKc18gEJiSyVzVX3bwbiPalQBQpuvfPh6lA9F7Kk/dWH0TIiXRpB9yicwijY6buPng==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.23.9.tgz",
+      "integrity": "sha512-hJhBCb0+NnTWybvWq2WpbCYDOcflSbx0t+BYP65e5R9GVnukiDTi+on5bFkk4p7QGuv190H6KfNiV9Knf/3cZA==",
       "dependencies": {
-        "@babel/helper-create-class-features-plugin": "^7.23.7",
+        "@babel/helper-create-class-features-plugin": "^7.23.9",
         "@babel/helper-plugin-utils": "^7.22.5",
         "@babel/plugin-syntax-decorators": "^7.23.3"
       },
@@ -1123,9 +1127,9 @@
       }
     },
     "node_modules/@babel/plugin-transform-async-generator-functions": {
-      "version": "7.23.7",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.23.7.tgz",
-      "integrity": "sha512-PdxEpL71bJp1byMG0va5gwQcXHxuEYC/BgI/e88mGTtohbZN28O5Yit0Plkkm/dBzCF/BxmbNcses1RH1T+urA==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-generator-functions/-/plugin-transform-async-generator-functions-7.23.9.tgz",
+      "integrity": "sha512-8Q3veQEDGe14dTYuwagbRtwxQDnytyg1JFu4/HwEMETeofocrB0U0ejBJIXoeG/t2oXZ8kzCyI0ZZfbT80VFNQ==",
       "dependencies": {
         "@babel/helper-environment-visitor": "^7.22.20",
         "@babel/helper-plugin-utils": "^7.22.5",
@@ -1474,9 +1478,9 @@
       }
     },
     "node_modules/@babel/plugin-transform-modules-systemjs": {
-      "version": "7.23.3",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.23.3.tgz",
-      "integrity": "sha512-ZxyKGTkF9xT9YJuKQRo19ewf3pXpopuYQd8cDXqNzc3mUNbOME0RKMoZxviQk74hwzfQsEe66dE92MaZbdHKNQ==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.23.9.tgz",
+      "integrity": "sha512-KDlPRM6sLo4o1FkiSlXoAa8edLXFsKKIda779fbLrvmeuc3itnjCtaO6RrtoaANsIJANj+Vk1zqbZIMhkCAHVw==",
       "dependencies": {
         "@babel/helper-hoist-variables": "^7.22.5",
         "@babel/helper-module-transforms": "^7.23.3",
@@ -1793,15 +1797,15 @@
       }
     },
     "node_modules/@babel/plugin-transform-runtime": {
-      "version": "7.23.7",
-      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.23.7.tgz",
-      "integrity": "sha512-fa0hnfmiXc9fq/weK34MUV0drz2pOL/vfKWvN7Qw127hiUPabFCUMgAbYWcchRzMJit4o5ARsK/s+5h0249pLw==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.23.9.tgz",
+      "integrity": "sha512-A7clW3a0aSjm3ONU9o2HAILSegJCYlEZmOhmBRReVtIpY/Z/p7yIZ+wR41Z+UipwdGuqwtID/V/dOdZXjwi9gQ==",
       "dependencies": {
         "@babel/helper-module-imports": "^7.22.15",
         "@babel/helper-plugin-utils": "^7.22.5",
-        "babel-plugin-polyfill-corejs2": "^0.4.7",
-        "babel-plugin-polyfill-corejs3": "^0.8.7",
-        "babel-plugin-polyfill-regenerator": "^0.5.4",
+        "babel-plugin-polyfill-corejs2": "^0.4.8",
+        "babel-plugin-polyfill-corejs3": "^0.9.0",
+        "babel-plugin-polyfill-regenerator": "^0.5.5",
         "semver": "^6.3.1"
       },
       "engines": {
@@ -1967,9 +1971,9 @@
       }
     },
     "node_modules/@babel/preset-env": {
-      "version": "7.23.8",
-      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.23.8.tgz",
-      "integrity": "sha512-lFlpmkApLkEP6woIKprO6DO60RImpatTQKtz4sUcDjVcK8M8mQ4sZsuxaTMNOZf0sqAq/ReYW1ZBHnOQwKpLWA==",
+      "version": "7.23.9",
+      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.23.9.tgz",
+      "integrity": "sha512-3kBGTNBBk9DQiPoXYS0g0BYlwTQYUTifqgKTjxUwEUkduRT2QOa0FPGBJ+NROQhGyYO5BuTJwGvBnqKDykac6A==",
       "dependencies": {
         "@babel/compat-data": "^7.23.5",
         "@babel/helper-compilation-targets": "^7.23.6",
@@ -1998,7 +2002,7 @@
         "@babel/plugin-syntax-top-level-await": "^7.14.5",
         "@babel/plugin-syntax-unicode-sets-regex": "^7.18.6",
         "@babel/plugin-transform-arrow-functions": "^7.23.3",
-        "@babel/plugin-transform-async-generator-functions": "^7.23.7",
+        "@babel/plugin-transform-async-generator-functions": "^7.23.9",
         "@babel/plugin-transform-async-to-generator": "^7.23.3",
         "@babel/plugin-transform-block-scoped-functions": "^7.23.3",
         "@babel/plugin-transform-block-scoping": "^7.23.4",
@@ -2020,7 +2024,7 @@
         "@babel/plugin-transform-member-expression-literals": "^7.23.3",
         "@babel/plugin-transform-modules-amd": "^7.23.3",
         "@babel/plugin-transform-modules-commonjs": "^7.23.3",
-        "@babel/plugin-transform-modules-systemjs": "^7.23.3",
+        "@babel/plugin-transform-modules-systemjs": "^7.23.9",
         "@babel/plugin-transform-modules-umd": "^7.23.3",
         "@babel/plugin-transform-named-capturing-groups-regex": "^7.22.5",
         "@babel/plugin-transform-new-target": "^7.23.3",
@@ -2046,9 +2050,9 @@
         "@babel/plugin-transform-unicode-regex": "^7.23.3",
         "@babel/plugin-transform-unicode-sets-regex": "^7.23.3",
         "@babel/preset-modules": "0.1.6-no-external-plugins",
-        "babel-plugin-polyfill-corejs2": "^0.4.7",
-        "babel-plugin-polyfill-corejs3": "^0.8.7",
-        "babel-plugin-polyfill-regenerator": "^0.5.4",
+        "babel-plugin-polyfill-corejs2": "^0.4.8",
+        "babel-plugin-polyfill-corejs3": "^0.9.0",
+        "babel-plugin-polyfill-regenerator": "^0.5.5",
         "core-js-compat": "^3.31.0",
         "semver": "^6.3.1"
       },
@@ -2454,6 +2458,64 @@
         "postcss-selector-parser": "^6.0.10"
       }
     },
+    "node_modules/@emotion/babel-plugin": {
+      "version": "11.11.0",
+      "resolved": "https://registry.npmjs.org/@emotion/babel-plugin/-/babel-plugin-11.11.0.tgz",
+      "integrity": "sha512-m4HEDZleaaCH+XgDDsPF15Ht6wTLsgDTeR3WYj9Q/k76JtWhrJjcP4+/XlG8LGT/Rol9qUfOIztXeA84ATpqPQ==",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.16.7",
+        "@babel/runtime": "^7.18.3",
+        "@emotion/hash": "^0.9.1",
+        "@emotion/memoize": "^0.8.1",
+        "@emotion/serialize": "^1.1.2",
+        "babel-plugin-macros": "^3.1.0",
+        "convert-source-map": "^1.5.0",
+        "escape-string-regexp": "^4.0.0",
+        "find-root": "^1.1.0",
+        "source-map": "^0.5.7",
+        "stylis": "4.2.0"
+      }
+    },
+    "node_modules/@emotion/babel-plugin/node_modules/@emotion/memoize": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
+      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
+    },
+    "node_modules/@emotion/babel-plugin/node_modules/convert-source-map": {
+      "version": "1.9.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.9.0.tgz",
+      "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A=="
+    },
+    "node_modules/@emotion/babel-plugin/node_modules/source-map": {
+      "version": "0.5.7",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
+      "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/@emotion/cache": {
+      "version": "11.11.0",
+      "resolved": "https://registry.npmjs.org/@emotion/cache/-/cache-11.11.0.tgz",
+      "integrity": "sha512-P34z9ssTCBi3e9EI1ZsWpNHcfY1r09ZO0rZbRO2ob3ZQMnFI35jB536qoXbkdesr5EUhYi22anuEJuyxifaqAQ==",
+      "dependencies": {
+        "@emotion/memoize": "^0.8.1",
+        "@emotion/sheet": "^1.2.2",
+        "@emotion/utils": "^1.2.1",
+        "@emotion/weak-memoize": "^0.3.1",
+        "stylis": "4.2.0"
+      }
+    },
+    "node_modules/@emotion/cache/node_modules/@emotion/memoize": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
+      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
+    },
+    "node_modules/@emotion/hash": {
+      "version": "0.9.1",
+      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.9.1.tgz",
+      "integrity": "sha512-gJB6HLm5rYwSLI6PQa+X1t5CFGrv1J1TWG+sOyMCeKz2ojaj6Fnl/rZEspogG+cvqbt4AE/2eIyD2QfLKTBNlQ=="
+    },
     "node_modules/@emotion/is-prop-valid": {
       "version": "0.8.8",
       "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-0.8.8.tgz",
@@ -2469,6 +2531,109 @@
       "integrity": "sha512-Ja/Vfqe3HpuzRsG1oBtWTHk2PGZ7GR+2Vz5iYGelAw8dx32K0y7PjVuxK6z1nMpZOqAFsRUPCkK1YjJ56qJlgw==",
       "optional": true
     },
+    "node_modules/@emotion/react": {
+      "version": "11.11.3",
+      "resolved": "https://registry.npmjs.org/@emotion/react/-/react-11.11.3.tgz",
+      "integrity": "sha512-Cnn0kuq4DoONOMcnoVsTOR8E+AdnKFf//6kUWc4LCdnxj31pZWn7rIULd6Y7/Js1PiPHzn7SKCM9vB/jBni8eA==",
+      "dependencies": {
+        "@babel/runtime": "^7.18.3",
+        "@emotion/babel-plugin": "^11.11.0",
+        "@emotion/cache": "^11.11.0",
+        "@emotion/serialize": "^1.1.3",
+        "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
+        "@emotion/utils": "^1.2.1",
+        "@emotion/weak-memoize": "^0.3.1",
+        "hoist-non-react-statics": "^3.3.1"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@emotion/serialize": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-1.1.3.tgz",
+      "integrity": "sha512-iD4D6QVZFDhcbH0RAG1uVu1CwVLMWUkCvAqqlewO/rxf8+87yIBAlt4+AxMiiKPLs5hFc0owNk/sLLAOROw3cA==",
+      "dependencies": {
+        "@emotion/hash": "^0.9.1",
+        "@emotion/memoize": "^0.8.1",
+        "@emotion/unitless": "^0.8.1",
+        "@emotion/utils": "^1.2.1",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@emotion/serialize/node_modules/@emotion/memoize": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
+      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
+    },
+    "node_modules/@emotion/sheet": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/@emotion/sheet/-/sheet-1.2.2.tgz",
+      "integrity": "sha512-0QBtGvaqtWi+nx6doRwDdBIzhNdZrXUppvTM4dtZZWEGTXL/XE/yJxLMGlDT1Gt+UHH5IX1n+jkXyytE/av7OA=="
+    },
+    "node_modules/@emotion/styled": {
+      "version": "11.11.0",
+      "resolved": "https://registry.npmjs.org/@emotion/styled/-/styled-11.11.0.tgz",
+      "integrity": "sha512-hM5Nnvu9P3midq5aaXj4I+lnSfNi7Pmd4EWk1fOZ3pxookaQTNew6bp4JaCBYM4HVFZF9g7UjJmsUmC2JlxOng==",
+      "dependencies": {
+        "@babel/runtime": "^7.18.3",
+        "@emotion/babel-plugin": "^11.11.0",
+        "@emotion/is-prop-valid": "^1.2.1",
+        "@emotion/serialize": "^1.1.2",
+        "@emotion/use-insertion-effect-with-fallbacks": "^1.0.1",
+        "@emotion/utils": "^1.2.1"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.0.0-rc.0",
+        "react": ">=16.8.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@emotion/styled/node_modules/@emotion/is-prop-valid": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@emotion/is-prop-valid/-/is-prop-valid-1.2.1.tgz",
+      "integrity": "sha512-61Mf7Ufx4aDxx1xlDeOm8aFFigGHE4z+0sKCa+IHCeZKiyP9RLD0Mmx7m8b9/Cf37f7NAvQOOJAbQQGVr5uERw==",
+      "dependencies": {
+        "@emotion/memoize": "^0.8.1"
+      }
+    },
+    "node_modules/@emotion/styled/node_modules/@emotion/memoize": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.8.1.tgz",
+      "integrity": "sha512-W2P2c/VRW1/1tLox0mVUalvnWXxavmv/Oum2aPsRcoDJuob75FC3Y8FbpfLwUegRcxINtGUMPq0tFCvYNTBXNA=="
+    },
+    "node_modules/@emotion/unitless": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.8.1.tgz",
+      "integrity": "sha512-KOEGMu6dmJZtpadb476IsZBclKvILjopjUii3V+7MnXIQCYh8W3NgNcgwo21n9LXZX6EDIKvqfjYxXebDwxKmQ=="
+    },
+    "node_modules/@emotion/use-insertion-effect-with-fallbacks": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@emotion/use-insertion-effect-with-fallbacks/-/use-insertion-effect-with-fallbacks-1.0.1.tgz",
+      "integrity": "sha512-jT/qyKZ9rzLErtrjGgdkMBn2OP8wl0G3sQlBb3YPryvKHsjvINUhVaPFfP+fpBcOkmrVOVEEHQFJ7nbj2TH2gw==",
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@emotion/utils": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-1.2.1.tgz",
+      "integrity": "sha512-Y2tGf3I+XVnajdItskUCn6LX+VUDmP6lTL4fcqsXAv43dnlbZiuW4MWQW38rW/BVWSE7Q/7+XQocmpnRYILUmg=="
+    },
+    "node_modules/@emotion/weak-memoize": {
+      "version": "0.3.1",
+      "resolved": "https://registry.npmjs.org/@emotion/weak-memoize/-/weak-memoize-0.3.1.tgz",
+      "integrity": "sha512-EsBwpc7hBUJWAsNPBmJy4hxWx12v6bshQsldrVmjxJoc3isbxhOrF2IcCpaXxfvq03NwkI7sbsOLXbYuqF/8Ww=="
+    },
     "node_modules/@eslint-community/eslint-utils": {
       "version": "4.4.0",
       "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz",
@@ -3061,20 +3226,32 @@
       "integrity": "sha512-eSkJsnhBWv5kCTSU1tSUVl9mpFu+5NXXunZc83le8GMjMlsWwQArSc7cJJ4yl+aDFY0NGLi0AjZWMn1axOrkRg=="
     },
     "node_modules/@floating-ui/core": {
-      "version": "1.5.3",
-      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.5.3.tgz",
-      "integrity": "sha512-O0WKDOo0yhJuugCx6trZQj5jVJ9yR0ystG2JaNAemYUWce+pmM6WUEFIibnWyEJKdrDxhm75NoSRME35FNaM/Q==",
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.6.0.tgz",
+      "integrity": "sha512-PcF++MykgmTj3CIyOQbKA/hDzOAiqI3mhuoN44WRCopIs1sgoDoU4oty4Jtqaj/y3oDU6fnVSm4QG0a3t5i0+g==",
       "dependencies": {
-        "@floating-ui/utils": "^0.2.0"
+        "@floating-ui/utils": "^0.2.1"
       }
     },
     "node_modules/@floating-ui/dom": {
-      "version": "1.5.4",
-      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.5.4.tgz",
-      "integrity": "sha512-jByEsHIY+eEdCjnTVu+E3ephzTOzkQ8hgUfGwos+bg7NlH33Zc5uO+QHz1mrQUOgIKKDD1RtS201P9NvAfq3XQ==",
+      "version": "1.6.1",
+      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.6.1.tgz",
+      "integrity": "sha512-iA8qE43/H5iGozC3W0YSnVSW42Vh522yyM1gj+BqRwVsTNOyr231PsXDaV04yT39PsO0QL2QpbI/M0ZaLUQgRQ==",
+      "dependencies": {
+        "@floating-ui/core": "^1.6.0",
+        "@floating-ui/utils": "^0.2.1"
+      }
+    },
+    "node_modules/@floating-ui/react-dom": {
+      "version": "2.0.8",
+      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.0.8.tgz",
+      "integrity": "sha512-HOdqOt3R3OGeTKidaLvJKcgg75S6tibQ3Tif4eyd91QnIJWr0NLvoXFpJA/j8HqkFSL68GDca9AuyWEHlhyClw==",
       "dependencies": {
-        "@floating-ui/core": "^1.5.3",
-        "@floating-ui/utils": "^0.2.0"
+        "@floating-ui/dom": "^1.6.1"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
       }
     },
     "node_modules/@floating-ui/utils": {
@@ -3181,12 +3358,12 @@
       }
     },
     "node_modules/@humanwhocodes/config-array": {
-      "version": "0.11.13",
-      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.13.tgz",
-      "integrity": "sha512-JSBDMiDKSzQVngfRjOdFXgFfklaXI4K9nLF49Auh21lmBWRLIK3+xTErTWD4KU54pb6coM6ESE7Awz/FNU3zgQ==",
+      "version": "0.11.14",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz",
+      "integrity": "sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==",
       "dependencies": {
-        "@humanwhocodes/object-schema": "^2.0.1",
-        "debug": "^4.1.1",
+        "@humanwhocodes/object-schema": "^2.0.2",
+        "debug": "^4.3.1",
         "minimatch": "^3.0.5"
       },
       "engines": {
@@ -3206,9 +3383,9 @@
       }
     },
     "node_modules/@humanwhocodes/object-schema": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.1.tgz",
-      "integrity": "sha512-dvuCeX5fC9dXgJn9t+X5atfmgQAzUOWqS1254Gh0m6i8wKd10ebXkfNKiRK+1GWi/yTvvLDHpoxLr0xxxeslWw=="
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.2.tgz",
+      "integrity": "sha512-6EwiSjwWYP7pTckG6I5eyFANjPhmPjUX9JRLUSfNPC7FX7zK9gyZAfUEaECL6ALTpGX5AjnBq3C9XmVWPitNpw=="
     },
     "node_modules/@isaacs/cliui": {
       "version": "8.0.2",
@@ -4119,6 +4296,308 @@
       "resolved": "https://registry.npmjs.org/@leichtgewicht/ip-codec/-/ip-codec-2.0.4.tgz",
       "integrity": "sha512-Hcv+nVC0kZnQ3tD9GVu5xSMR4VVYOteQIr/hwFPVEvPdlXqgGEuRjiheChHgdM+JyqdgNcmzZOX/tnl0JOiI7A=="
     },
+    "node_modules/@mui/base": {
+      "version": "5.0.0-beta.33",
+      "resolved": "https://registry.npmjs.org/@mui/base/-/base-5.0.0-beta.33.tgz",
+      "integrity": "sha512-WcSpoJUw/UYHXpvgtl4HyMar2Ar97illUpqiS/X1gtSBp6sdDW6kB2BJ9OlVQ+Kk/RL2GDp/WHA9sbjAYV35ow==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@floating-ui/react-dom": "^2.0.6",
+        "@mui/types": "^7.2.13",
+        "@mui/utils": "^5.15.6",
+        "@popperjs/core": "^2.11.8",
+        "clsx": "^2.1.0",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0",
+        "react-dom": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/base/node_modules/clsx": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.0.tgz",
+      "integrity": "sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@mui/core-downloads-tracker": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-5.15.6.tgz",
+      "integrity": "sha512-0aoWS4qvk1uzm9JBs83oQmIMIQeTBUeqqu8u+3uo2tMznrB5fIKqQVCbCgq+4Tm4jG+5F7dIvnjvQ2aV7UKtdw==",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      }
+    },
+    "node_modules/@mui/joy": {
+      "version": "5.0.0-beta.24",
+      "resolved": "https://registry.npmjs.org/@mui/joy/-/joy-5.0.0-beta.24.tgz",
+      "integrity": "sha512-cKlIW56GsKKo9cVm+6pzNS+s4ch3r/SX/Zq5DA10I/TSuW9O5ptIOqeSs+WYpkyAzIoPkCpEXCPR/vGHpOt6MA==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@mui/base": "5.0.0-beta.33",
+        "@mui/core-downloads-tracker": "^5.15.6",
+        "@mui/system": "^5.15.6",
+        "@mui/types": "^7.2.13",
+        "@mui/utils": "^5.15.6",
+        "clsx": "^2.1.0",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.5.0",
+        "@emotion/styled": "^11.3.0",
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0",
+        "react-dom": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/joy/node_modules/clsx": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.0.tgz",
+      "integrity": "sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@mui/material": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/material/-/material-5.15.6.tgz",
+      "integrity": "sha512-rw7bDdpi2kzfmcDN78lHp8swArJ5sBCKsn+4G3IpGfu44ycyWAWX0VdlvkjcR9Yrws2KIm7c+8niXpWHUDbWoA==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@mui/base": "5.0.0-beta.33",
+        "@mui/core-downloads-tracker": "^5.15.6",
+        "@mui/system": "^5.15.6",
+        "@mui/types": "^7.2.13",
+        "@mui/utils": "^5.15.6",
+        "@types/react-transition-group": "^4.4.10",
+        "clsx": "^2.1.0",
+        "csstype": "^3.1.2",
+        "prop-types": "^15.8.1",
+        "react-is": "^18.2.0",
+        "react-transition-group": "^4.4.5"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.5.0",
+        "@emotion/styled": "^11.3.0",
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0",
+        "react-dom": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/material/node_modules/clsx": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.0.tgz",
+      "integrity": "sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@mui/material/node_modules/react-is": {
+      "version": "18.2.0",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz",
+      "integrity": "sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w=="
+    },
+    "node_modules/@mui/private-theming": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/private-theming/-/private-theming-5.15.6.tgz",
+      "integrity": "sha512-ZBX9E6VNUSscUOtU8uU462VvpvBS7eFl5VfxAzTRVQBHflzL+5KtnGrebgf6Nd6cdvxa1o0OomiaxSKoN2XDmg==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@mui/utils": "^5.15.6",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/styled-engine": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-5.15.6.tgz",
+      "integrity": "sha512-KAn8P8xP/WigFKMlEYUpU9z2o7jJnv0BG28Qu1dhNQVutsLVIFdRf5Nb+0ijp2qgtcmygQ0FtfRuXv5LYetZTg==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@emotion/cache": "^11.11.0",
+        "csstype": "^3.1.2",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.4.1",
+        "@emotion/styled": "^11.3.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/system": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/system/-/system-5.15.6.tgz",
+      "integrity": "sha512-J01D//u8IfXvaEHMBQX5aO2l7Q+P15nt96c4NskX7yp5/+UuZP8XCQJhtBtLuj+M2LLyXHYGmCPeblsmmscP2Q==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@mui/private-theming": "^5.15.6",
+        "@mui/styled-engine": "^5.15.6",
+        "@mui/types": "^7.2.13",
+        "@mui/utils": "^5.15.6",
+        "clsx": "^2.1.0",
+        "csstype": "^3.1.2",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.5.0",
+        "@emotion/styled": "^11.3.0",
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/system/node_modules/clsx": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-2.1.0.tgz",
+      "integrity": "sha512-m3iNNWpd9rl3jvvcBnu70ylMdrXt8Vlq4HYadnU5fwcOtvkSQWPmj7amUcDT2qYI7risszBjI5AUIUox9D16pg==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@mui/types": {
+      "version": "7.2.13",
+      "resolved": "https://registry.npmjs.org/@mui/types/-/types-7.2.13.tgz",
+      "integrity": "sha512-qP9OgacN62s+l8rdDhSFRe05HWtLLJ5TGclC9I1+tQngbssu0m2dmFZs+Px53AcOs9fD7TbYd4gc9AXzVqO/+g==",
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/utils": {
+      "version": "5.15.6",
+      "resolved": "https://registry.npmjs.org/@mui/utils/-/utils-5.15.6.tgz",
+      "integrity": "sha512-qfEhf+zfU9aQdbzo1qrSWlbPQhH1nCgeYgwhOVnj9Bn39shJQitEnXpSQpSNag8+uty5Od6PxmlNKPTnPySRKA==",
+      "dependencies": {
+        "@babel/runtime": "^7.23.8",
+        "@types/prop-types": "^15.7.11",
+        "prop-types": "^15.8.1",
+        "react-is": "^18.2.0"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/utils/node_modules/react-is": {
+      "version": "18.2.0",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-18.2.0.tgz",
+      "integrity": "sha512-xWGDIW6x921xtzPkhiULtthJHoJvBbF3q26fzloPCK0hsvxtPVelvftw3zjbHWSkR2km9Z+4uxbDDK/6Zw9B8w=="
+    },
     "node_modules/@nicolo-ribaudo/eslint-scope-5-internals": {
       "version": "5.1.1-v1",
       "resolved": "https://registry.npmjs.org/@nicolo-ribaudo/eslint-scope-5-internals/-/eslint-scope-5-internals-5.1.1-v1.tgz",
@@ -4241,7 +4720,6 @@
       "version": "2.11.8",
       "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
       "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
-      "peer": true,
       "funding": {
         "type": "opencollective",
         "url": "https://opencollective.com/popperjs"
@@ -4416,9 +4894,9 @@
       "integrity": "sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw=="
     },
     "node_modules/@rushstack/eslint-patch": {
-      "version": "1.6.1",
-      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.6.1.tgz",
-      "integrity": "sha512-UY+FGM/2jjMkzQLn8pxcHGMaVLh9aEitG3zY2CiY7XHdLiz3bZOwa6oDxNqEMv7zZkV+cj5DOdz0cQ1BP5Hjgw=="
+      "version": "1.7.2",
+      "resolved": "https://registry.npmjs.org/@rushstack/eslint-patch/-/eslint-patch-1.7.2.tgz",
+      "integrity": "sha512-RbhOOTCNoCrbfkRyoXODZp75MlpiHMgbE5MEBZAnnnLyQNgrigEj4p0lzsMDyc1zVsJDLrivB58tgg3emX0eEA=="
     },
     "node_modules/@sinclair/typebox": {
       "version": "0.27.8",
@@ -4877,9 +5355,9 @@
       }
     },
     "node_modules/@types/eslint": {
-      "version": "8.56.1",
-      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-8.56.1.tgz",
-      "integrity": "sha512-18PLWRzhy9glDQp3+wOgfLYRWlhgX0azxgJ63rdpoUHyrC9z0f5CkFburjQx4uD7ZCruw85ZtMt6K+L+R8fLJQ==",
+      "version": "8.56.2",
+      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-8.56.2.tgz",
+      "integrity": "sha512-uQDwm1wFHmbBbCZCqAlq6Do9LYwByNZHWzXppSnay9SuwJ+VRbjkbLABer54kcPnMSlG6Fdiy2yaFXm/z9Z5gw==",
       "dependencies": {
         "@types/estree": "*",
         "@types/json-schema": "*"
@@ -4911,9 +5389,9 @@
       }
     },
     "node_modules/@types/express-serve-static-core": {
-      "version": "4.17.41",
-      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.41.tgz",
-      "integrity": "sha512-OaJ7XLaelTgrvlZD8/aa0vvvxZdUmlCn6MtWeB7TkiKW70BQLc9XEPpDLPdbo52ZhXUCrznlWdCHWxJWtdyajA==",
+      "version": "4.17.42",
+      "resolved": "https://registry.npmjs.org/@types/express-serve-static-core/-/express-serve-static-core-4.17.42.tgz",
+      "integrity": "sha512-ckM3jm2bf/MfB3+spLPWYPUH573plBFwpOhqQ2WottxYV85j1HQFlxmnTq57X1yHY9awZPig06hL/cLMgNWHIQ==",
       "dependencies": {
         "@types/node": "*",
         "@types/qs": "*",
@@ -5085,6 +5563,14 @@
         "@types/react": "*"
       }
     },
+    "node_modules/@types/react-transition-group": {
+      "version": "4.4.10",
+      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.10.tgz",
+      "integrity": "sha512-hT/+s0VQs2ojCX823m60m5f0sL5idt9SO6Tj6Dg+rdphGPIeJbJ6CxvBYkgkGKrYeDjvIpKTR38UzmtHJOGW3Q==",
+      "dependencies": {
+        "@types/react": "*"
+      }
+    },
     "node_modules/@types/resolve": {
       "version": "1.17.1",
       "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
@@ -6009,9 +6495,9 @@
       }
     },
     "node_modules/autoprefixer": {
-      "version": "10.4.16",
-      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.16.tgz",
-      "integrity": "sha512-7vd3UC6xKp0HLfua5IjZlcXvGAGy7cBAXTg2lyQ/8WpNhd6SiZ8Be+xm3FyBSYJx5GKcpRCzBh7RH4/0dnY+uQ==",
+      "version": "10.4.17",
+      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.17.tgz",
+      "integrity": "sha512-/cpVNRLSfhOtcGflT13P2794gVSgmPgTR+erw5ifnMLZb0UnSlkK4tquLmkd3BhA+nLo5tX8Cu0upUsGKvKbmg==",
       "funding": [
         {
           "type": "opencollective",
@@ -6027,9 +6513,9 @@
         }
       ],
       "dependencies": {
-        "browserslist": "^4.21.10",
-        "caniuse-lite": "^1.0.30001538",
-        "fraction.js": "^4.3.6",
+        "browserslist": "^4.22.2",
+        "caniuse-lite": "^1.0.30001578",
+        "fraction.js": "^4.3.7",
         "normalize-range": "^0.1.2",
         "picocolors": "^1.0.0",
         "postcss-value-parser": "^4.2.0"
@@ -6212,12 +6698,12 @@
       }
     },
     "node_modules/babel-plugin-polyfill-corejs2": {
-      "version": "0.4.7",
-      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.7.tgz",
-      "integrity": "sha512-LidDk/tEGDfuHW2DWh/Hgo4rmnw3cduK6ZkOI1NPFceSK3n/yAGeOsNT7FLnSGHkXj3RHGSEVkN3FsCTY6w2CQ==",
+      "version": "0.4.8",
+      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs2/-/babel-plugin-polyfill-corejs2-0.4.8.tgz",
+      "integrity": "sha512-OtIuQfafSzpo/LhnJaykc0R/MMnuLSSVjVYy9mHArIZ9qTCSZ6TpWCuEKZYVoN//t8HqBNScHrOtCrIK5IaGLg==",
       "dependencies": {
         "@babel/compat-data": "^7.22.6",
-        "@babel/helper-define-polyfill-provider": "^0.4.4",
+        "@babel/helper-define-polyfill-provider": "^0.5.0",
         "semver": "^6.3.1"
       },
       "peerDependencies": {
@@ -6233,23 +6719,23 @@
       }
     },
     "node_modules/babel-plugin-polyfill-corejs3": {
-      "version": "0.8.7",
-      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.8.7.tgz",
-      "integrity": "sha512-KyDvZYxAzkC0Aj2dAPyDzi2Ym15e5JKZSK+maI7NAwSqofvuFglbSsxE7wUOvTg9oFVnHMzVzBKcqEb4PJgtOA==",
+      "version": "0.9.0",
+      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-corejs3/-/babel-plugin-polyfill-corejs3-0.9.0.tgz",
+      "integrity": "sha512-7nZPG1uzK2Ymhy/NbaOWTg3uibM2BmGASS4vHS4szRZAIR8R6GwA/xAujpdrXU5iyklrimWnLWU+BLF9suPTqg==",
       "dependencies": {
-        "@babel/helper-define-polyfill-provider": "^0.4.4",
-        "core-js-compat": "^3.33.1"
+        "@babel/helper-define-polyfill-provider": "^0.5.0",
+        "core-js-compat": "^3.34.0"
       },
       "peerDependencies": {
         "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
       }
     },
     "node_modules/babel-plugin-polyfill-regenerator": {
-      "version": "0.5.4",
-      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.5.4.tgz",
-      "integrity": "sha512-S/x2iOCvDaCASLYsOOgWOq4bCfKYVqvO/uxjkaYyZ3rVsVE3CeAI/c84NpyuBBymEgNvHgjEot3a9/Z/kXvqsg==",
+      "version": "0.5.5",
+      "resolved": "https://registry.npmjs.org/babel-plugin-polyfill-regenerator/-/babel-plugin-polyfill-regenerator-0.5.5.tgz",
+      "integrity": "sha512-OJGYZlhLqBh2DDHeqAxWB1XIvr49CxiJ2gIt61/PU55CQK4Z58OzMqjDe1zwQdQk+rBYsRc+1rJmdajM3gimHg==",
       "dependencies": {
-        "@babel/helper-define-polyfill-provider": "^0.4.4"
+        "@babel/helper-define-polyfill-provider": "^0.5.0"
       },
       "peerDependencies": {
         "@babel/core": "^7.4.0 || ^8.0.0-0 <8.0.0"
@@ -6652,9 +7138,9 @@
       }
     },
     "node_modules/caniuse-lite": {
-      "version": "1.0.30001576",
-      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001576.tgz",
-      "integrity": "sha512-ff5BdakGe2P3SQsMsiqmt1Lc8221NR1VzHj5jXN5vBny9A6fpze94HiVV/n7XRosOlsShJcvMv5mdnpjOGCEgg==",
+      "version": "1.0.30001581",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001581.tgz",
+      "integrity": "sha512-whlTkwhqV2tUmP3oYhtNfaWGYHDdS3JYFQBKXxcUR9qqPWsRhFHhoISO2Xnl/g0xyKzht9mI1LZpiNWfMzHixQ==",
       "funding": [
         {
           "type": "opencollective",
@@ -7126,9 +7612,9 @@
       }
     },
     "node_modules/core-js-compat": {
-      "version": "3.35.0",
-      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.35.0.tgz",
-      "integrity": "sha512-5blwFAddknKeNgsjBzilkdQ0+YK8L1PfqPYq40NOYMYFSS38qj+hpTcLLWwpIwA2A5bje/x5jmVn2tzUMg9IVw==",
+      "version": "3.35.1",
+      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.35.1.tgz",
+      "integrity": "sha512-sftHa5qUJY3rs9Zht1WEnmkvXputCyDBczPnr7QDgL8n3qrF3CMXY4VPSYtOLLiOUJcah2WNXREd48iOl6mQIw==",
       "dependencies": {
         "browserslist": "^4.22.2"
       },
@@ -7138,9 +7624,9 @@
       }
     },
     "node_modules/core-js-pure": {
-      "version": "3.35.0",
-      "resolved": "https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.35.0.tgz",
-      "integrity": "sha512-f+eRYmkou59uh7BPcyJ8MC76DiGhspj1KMxVIcF24tzP8NA9HVa1uC7BTW2tgx7E1QVCzDzsgp7kArrzhlz8Ew==",
+      "version": "3.35.1",
+      "resolved": "https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.35.1.tgz",
+      "integrity": "sha512-zcIdi/CL3MWbBJYo5YCeVAAx+Sy9yJE9I3/u9LkFABwbeaPhTMRWraM8mYFp9jW5Z50hOy7FVzCc8dCrpZqtIQ==",
       "hasInstallScript": true,
       "funding": {
         "type": "opencollective",
@@ -7245,15 +7731,15 @@
       }
     },
     "node_modules/css-loader": {
-      "version": "6.9.0",
-      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-6.9.0.tgz",
-      "integrity": "sha512-3I5Nu4ytWlHvOP6zItjiHlefBNtrH+oehq8tnQa2kO305qpVyx9XNIT1CXIj5bgCJs7qICBCkgCYxQLKPANoLA==",
+      "version": "6.9.1",
+      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-6.9.1.tgz",
+      "integrity": "sha512-OzABOh0+26JKFdMzlK6PY1u5Zx8+Ck7CVRlcGNZoY9qwJjdfu2VWFuprTIpPW+Av5TZTVViYWcFQaEEQURLknQ==",
       "dependencies": {
         "icss-utils": "^5.1.0",
-        "postcss": "^8.4.31",
+        "postcss": "^8.4.33",
         "postcss-modules-extract-imports": "^3.0.0",
-        "postcss-modules-local-by-default": "^4.0.3",
-        "postcss-modules-scope": "^3.1.0",
+        "postcss-modules-local-by-default": "^4.0.4",
+        "postcss-modules-scope": "^3.1.1",
         "postcss-modules-values": "^4.0.0",
         "postcss-value-parser": "^4.2.0",
         "semver": "^7.5.4"
@@ -7874,6 +8360,15 @@
         "utila": "~0.4"
       }
     },
+    "node_modules/dom-helpers": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
+      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
+      "dependencies": {
+        "@babel/runtime": "^7.8.7",
+        "csstype": "^3.0.2"
+      }
+    },
     "node_modules/dom-serializer": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
@@ -9074,9 +9569,9 @@
       "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw=="
     },
     "node_modules/fastq": {
-      "version": "1.16.0",
-      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.16.0.tgz",
-      "integrity": "sha512-ifCoaXsDrsdkWTtiNJX5uzHDsrck5TzfKKDcuFFTIrrc/BS076qgEIfoIy1VeZqViznfKiysPYTh/QeHtnIsYA==",
+      "version": "1.17.0",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.0.tgz",
+      "integrity": "sha512-zGygtijUMT7jnk3h26kUms3BkSDp4IfIKjmnqI2tvx6nuBfiF1UqOxbnLfzdv+apBy+53oaImsKtMw/xYbW+1w==",
       "dependencies": {
         "reusify": "^1.0.4"
       }
@@ -9222,6 +9717,11 @@
         "url": "https://github.com/avajs/find-cache-dir?sponsor=1"
       }
     },
+    "node_modules/find-root": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",
+      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="
+    },
     "node_modules/find-up": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
@@ -9896,6 +10396,19 @@
         "he": "bin/he"
       }
     },
+    "node_modules/hoist-non-react-statics": {
+      "version": "3.3.2",
+      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
+      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
+      "dependencies": {
+        "react-is": "^16.7.0"
+      }
+    },
+    "node_modules/hoist-non-react-statics/node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
+    },
     "node_modules/hoopy": {
       "version": "0.1.4",
       "resolved": "https://registry.npmjs.org/hoopy/-/hoopy-0.1.4.tgz",
@@ -13324,9 +13837,9 @@
       }
     },
     "node_modules/mini-css-extract-plugin": {
-      "version": "2.7.6",
-      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-2.7.6.tgz",
-      "integrity": "sha512-Qk7HcgaPkGG6eD77mLvZS1nmxlao3j+9PkrT9Uc7HAE1id3F41+DdBRYRYkbyfNRGzm8/YWtzhw7nVPmwhqTQw==",
+      "version": "2.7.7",
+      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-2.7.7.tgz",
+      "integrity": "sha512-+0n11YGyRavUR3IlaOzJ0/4Il1avMvJ1VJfhWfCn24ITQXhRr1gghbhhrda6tgtNcpZaWKdSuwKq20Jb7fnlyw==",
       "dependencies": {
         "schema-utils": "^4.0.0"
       },
@@ -13961,9 +14474,9 @@
       }
     },
     "node_modules/path-scurry/node_modules/lru-cache": {
-      "version": "10.1.0",
-      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.1.0.tgz",
-      "integrity": "sha512-/1clY/ui8CzjKFyjdvwPWJUYKiFVXG2I2cY0ssG7h4+hwk+XOIX7ZSG9Q7TW8TW3Kp3BUSqgFWBLgL4PJ+Blag==",
+      "version": "10.2.0",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.2.0.tgz",
+      "integrity": "sha512-2bIM8x+VAf6JT4bKAljS1qUWgMsqZRPGJS6FSahIMPVvctcNhyVp7AJu7quxOW9jwkryBReKZY5tY5JYv2n/7Q==",
       "engines": {
         "node": "14 || >=16.14"
       }
@@ -14807,9 +15320,9 @@
       }
     },
     "node_modules/postcss-modules-local-by-default": {
-      "version": "4.0.3",
-      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.0.3.tgz",
-      "integrity": "sha512-2/u2zraspoACtrbFRnTijMiQtb4GW4BvatjaG/bCjYQo8kLTdevCUlwuBHx2sCnSyrI3x3qj4ZK1j5LQBgzmwA==",
+      "version": "4.0.4",
+      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-4.0.4.tgz",
+      "integrity": "sha512-L4QzMnOdVwRm1Qb8m4x8jsZzKAaPAgrUF1r/hjDR2Xj7R+8Zsf97jAlSQzWtKx5YNiNGN8QxmPFIc/sh+RQl+Q==",
       "dependencies": {
         "icss-utils": "^5.0.0",
         "postcss-selector-parser": "^6.0.2",
@@ -14823,9 +15336,9 @@
       }
     },
     "node_modules/postcss-modules-scope": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-3.1.0.tgz",
-      "integrity": "sha512-SaIbK8XW+MZbd0xHPf7kdfA/3eOt7vxJ72IRecn3EzuZVLr1r0orzf0MX/pN8m+NMDoo6X/SQd8oeKqGZd8PXg==",
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-3.1.1.tgz",
+      "integrity": "sha512-uZgqzdTleelWjzJY+Fhti6F3C9iF1JR/dODLs/JDefozYcKTBCdD8BIl6nNPbTbcLnGrk56hzwZC2DaGNvYjzA==",
       "dependencies": {
         "postcss-selector-parser": "^6.0.4"
       },
@@ -16041,6 +16554,21 @@
         "react-dom": ">=16"
       }
     },
+    "node_modules/react-transition-group": {
+      "version": "4.4.5",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
+      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
+      "dependencies": {
+        "@babel/runtime": "^7.5.5",
+        "dom-helpers": "^5.0.1",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2"
+      },
+      "peerDependencies": {
+        "react": ">=16.6.0",
+        "react-dom": ">=16.6.0"
+      }
+    },
     "node_modules/react-viewport-hooks": {
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/react-viewport-hooks/-/react-viewport-hooks-1.5.0.tgz",
@@ -16480,12 +17008,12 @@
       }
     },
     "node_modules/safe-array-concat": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.0.1.tgz",
-      "integrity": "sha512-6XbUAseYE2KtOuGueyeobCySj9L4+66Tn6KQMOPQJrAJEowYKW/YR/MGJZl7FdydUdaFu4LYyDZjxf4/Nmo23Q==",
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.0.tgz",
+      "integrity": "sha512-ZdQ0Jeb9Ofti4hbt5lX3T2JcAamT9hfzYU1MNB+z/jaEbB6wfFfPIR/zEORmZqobkCCJhSjodobH6WHNmJ97dg==",
       "dependencies": {
-        "call-bind": "^1.0.2",
-        "get-intrinsic": "^1.2.1",
+        "call-bind": "^1.0.5",
+        "get-intrinsic": "^1.2.2",
         "has-symbols": "^1.0.3",
         "isarray": "^2.0.5"
       },
@@ -16516,14 +17044,17 @@
       ]
     },
     "node_modules/safe-regex-test": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.0.tgz",
-      "integrity": "sha512-JBUUzyOgEwXQY1NuPtvcj/qcBDbDmEvWufhlnXZIm75DEHp+afM1r1ujJpJsV/gSM4t59tpDyPi1sd6ZaPFfsA==",
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.2.tgz",
+      "integrity": "sha512-83S9w6eFq12BBIJYvjMux6/dkirb8+4zJRA9cxNBVb7Wq5fJBW+Xze48WqR8pxua7bDuAaaAxtVVd4Idjp1dBQ==",
       "dependencies": {
-        "call-bind": "^1.0.2",
-        "get-intrinsic": "^1.1.3",
+        "call-bind": "^1.0.5",
+        "get-intrinsic": "^1.2.2",
         "is-regex": "^1.1.4"
       },
+      "engines": {
+        "node": ">= 0.4"
+      },
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
       }
@@ -17429,9 +17960,9 @@
       }
     },
     "node_modules/style-loader": {
-      "version": "3.3.3",
-      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-3.3.3.tgz",
-      "integrity": "sha512-53BiGLXAcll9maCYtZi2RCQZKa8NQQai5C4horqKyRmHj9H7QmcUyucrH+4KW/gBQbXM2AsB0axoEcFZPlfPcw==",
+      "version": "3.3.4",
+      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-3.3.4.tgz",
+      "integrity": "sha512-0WqXzrsMTyb8yjZJHDqwmnwRJvhALK9LfRtRc6B4UTWe8AijYLZYZ9thuJTZc2VfQWINADW/j+LiJnfy2RoC1w==",
       "engines": {
         "node": ">= 12.13.0"
       },
@@ -17458,6 +17989,11 @@
         "postcss": "^8.2.15"
       }
     },
+    "node_modules/stylis": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/stylis/-/stylis-4.2.0.tgz",
+      "integrity": "sha512-Orov6g6BB1sDfYgzWfTHDOxamtX1bE/zo104Dh9e6fqJ3PooipYyfJ0pUmrZO2wAvO8YbEyeFrkV91XTsGMSrw=="
+    },
     "node_modules/sucrase": {
       "version": "3.35.0",
       "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
@@ -17814,9 +18350,9 @@
       }
     },
     "node_modules/terser": {
-      "version": "5.26.0",
-      "resolved": "https://registry.npmjs.org/terser/-/terser-5.26.0.tgz",
-      "integrity": "sha512-dytTGoE2oHgbNV9nTzgBEPaqAWvcJNl66VZ0BkJqlvp71IjO8CxdBx/ykCNb47cLnCmCvRZ6ZR0tLkqvZCdVBQ==",
+      "version": "5.27.0",
+      "resolved": "https://registry.npmjs.org/terser/-/terser-5.27.0.tgz",
+      "integrity": "sha512-bi1HRwVRskAjheeYl291n3JC4GgO/Ty4z1nVs5AAsmonJulGxpSektecnNedrwK9C7vpvVtcX3cw00VSLt7U2A==",
       "dependencies": {
         "@jridgewell/source-map": "^0.3.3",
         "acorn": "^8.8.2",
@@ -18165,16 +18701,16 @@
       }
     },
     "node_modules/typescript": {
-      "version": "4.9.5",
-      "resolved": "https://registry.npmjs.org/typescript/-/typescript-4.9.5.tgz",
-      "integrity": "sha512-1FXk9E2Hm+QzZQ7z+McJiHL4NW1F2EzMu9Nq9i3zAaGqibafqYwCVU6WyWAuyQRRzOlxou8xZSyXLEN8oKj24g==",
+      "version": "5.3.3",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.3.3.tgz",
+      "integrity": "sha512-pXWcraxM0uxAS+tN0AG/BF2TyqmHO014Z070UsJ+pFvYuRSq8KH8DmWpnbXe0pEPDHXZV3FcAbJkijJ5oNEnWw==",
       "peer": true,
       "bin": {
         "tsc": "bin/tsc",
         "tsserver": "bin/tsserver"
       },
       "engines": {
-        "node": ">=4.2.0"
+        "node": ">=14.17"
       }
     },
     "node_modules/unbox-primitive": {
@@ -18488,18 +19024,18 @@
       }
     },
     "node_modules/webpack": {
-      "version": "5.89.0",
-      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.89.0.tgz",
-      "integrity": "sha512-qyfIC10pOr70V+jkmud8tMfajraGCZMBWJtrmuBymQKCrLTRejBI8STDp1MCyZu/QTdZSeacCQYpYNQVOzX5kw==",
+      "version": "5.90.0",
+      "resolved": "https://registry.npmjs.org/webpack/-/webpack-5.90.0.tgz",
+      "integrity": "sha512-bdmyXRCXeeNIePv6R6tGPyy20aUobw4Zy8r0LUS2EWO+U+Ke/gYDgsCh7bl5rB6jPpr4r0SZa6dPxBxLooDT3w==",
       "dependencies": {
         "@types/eslint-scope": "^3.7.3",
-        "@types/estree": "^1.0.0",
+        "@types/estree": "^1.0.5",
         "@webassemblyjs/ast": "^1.11.5",
         "@webassemblyjs/wasm-edit": "^1.11.5",
         "@webassemblyjs/wasm-parser": "^1.11.5",
         "acorn": "^8.7.1",
         "acorn-import-assertions": "^1.9.0",
-        "browserslist": "^4.14.5",
+        "browserslist": "^4.21.10",
         "chrome-trace-event": "^1.0.2",
         "enhanced-resolve": "^5.15.0",
         "es-module-lexer": "^1.2.1",
@@ -18513,7 +19049,7 @@
         "neo-async": "^2.6.2",
         "schema-utils": "^3.2.0",
         "tapable": "^2.1.1",
-        "terser-webpack-plugin": "^5.3.7",
+        "terser-webpack-plugin": "^5.3.10",
         "watchpack": "^2.4.0",
         "webpack-sources": "^3.2.3"
       },
diff --git a/client/package.json b/client/package.json
index 982ddab..7c528bf 100644
--- a/client/package.json
+++ b/client/package.json
@@ -4,7 +4,11 @@
   "private": true,
   "dependencies": {
     "@apirtc/apirtc": "^5.0.19",
+    "@emotion/react": "^11.11.3",
+    "@emotion/styled": "^11.11.0",
     "@fortawesome/fontawesome-free": "^6.5.1",
+    "@mui/joy": "^5.0.0-beta.24",
+    "@mui/material": "^5.15.6",
     "@react-oauth/google": "^0.12.1",
     "@reduxjs/toolkit": "^2.0.1",
     "@stripe/react-stripe-js": "^2.4.0",
@@ -38,7 +42,7 @@
     "react-redux": "^9.0.4",
     "react-responsive-carousel": "^3.2.23",
     "react-router-dom": "^6.21.0",
-    "react-scripts": "5.0.1",
+    "react-scripts": "^5.0.1",
     "react-shepherd": "^4.2.0",
     "react-timer-hook": "^3.0.7",
     "react-toastify": "^9.1.3",
diff --git a/client/src/Components/Chats/AdsInterface/Ads.jsx b/client/src/Components/Chats/AdsInterface/Ads.jsx
index a51c55d..6539fcb 100644
--- a/client/src/Components/Chats/AdsInterface/Ads.jsx
+++ b/client/src/Components/Chats/AdsInterface/Ads.jsx
@@ -1,41 +1,18 @@
 import React, { useEffect, useState } from 'react'
 import { Carousel, initMDB } from "mdb-ui-kit";
 import './Ads.css'
-import axios from '../../../interceptors/axios'
 import { Link } from 'react-router-dom';
-import toast from 'react-hot-toast';
 import { useSelector } from 'react-redux';
 initMDB({ Carousel });
 
 function Ads() {
-    const [ads, setAds] = useState([])
-    const userData = useSelector(state=>state.user)
-    useEffect(() => {
-        async function getAds(){
-            const token = localStorage.getItem('SyncUp_Auth_Token')
-            if (token&&!userData.value.isPremium) {
-                const options = {
-                    route:'getAds',
-                    headers:{Authorization: `Bearer ${token}`},
-                    crypto:true
-                }
-                axios(options).then(res=>{
-                    if (res.data.success) {
-                        setAds(res.data.body)
-                    } else {
-                        toast.error(res.data.message)
-                    }
-                })
-            }
-        }
-        getAds()
-    }, [])
+    const ads = useSelector(state=>state.ads)
     return (
         <>
             <div className="adsContainer">
                 <div id="carouselExampleSlidesOnly" className="carousel slide" data-ride="carousel">
                     <div className="carousel-inner">
-                        {ads.length && ads.map((el, ind) => {
+                        {ads.value.length && ads.value.map((el, ind) => {
                             return (
                                 <div key={ind} className={ind == 0 ? "carousel-item active" : "carousel-item"}>
                                     <Link to={el.redirect_url} target='_blank'>
diff --git a/client/src/Components/Chats/ChatBox/ChatBox.css b/client/src/Components/Chats/ChatBox/ChatBox.css
index 4f77149..f912b8c 100644
--- a/client/src/Components/Chats/ChatBox/ChatBox.css
+++ b/client/src/Components/Chats/ChatBox/ChatBox.css
@@ -6,6 +6,7 @@
     justify-content: center;
     align-items: center;
     background-color: #EEE9EE;
+    overflow: hidden;
 
 }
 .chatsLeft {
@@ -14,11 +15,10 @@
     width: 40%;
     min-width: 25pc;
 }
-.chatsRight {
-    background: linear-gradient(160deg, #ee9ae5ff 0%, #5961f9ff 100%);
-}
 .chatsRight{
+    background: linear-gradient(160deg, #ee9ae5ff 0%, #5961f9ff 100%);
     width: 60%;
+    overflow: hidden;
 }
 .chatsStyle {
     height: 96vh;
diff --git a/client/src/Components/Chats/Chatlist/ChatingInterface.jsx b/client/src/Components/Chats/Chatlist/ChatingInterface.jsx
index d5bf6ee..d23a291 100644
--- a/client/src/Components/Chats/Chatlist/ChatingInterface.jsx
+++ b/client/src/Components/Chats/Chatlist/ChatingInterface.jsx
@@ -29,46 +29,65 @@ import VidConfig from '../../VideoCall/VidConfig';
 import msgSending from '../../../assets/Images/pending.png'
 
 
-const ConversationDetails = ({ reciever, setChat,setGo }) => {
+const ConversationTopBar = ({ reciever, setChat, setGo }) => {
+    const userData= useSelector(state=>state.user)
+    const socket = useSocket()
+    const [isTyping, setTyping] = useState(false)
+    useEffect(() => {
+        socket.on('typing', () => {
+            console.log('typing')
+            setTyping(true)
+        })
+        socket.on('typingEnd', () => {
+            setTyping(false)
+        })
+    }, [])
     return (
-        <div className="conversationDetails">
-            <button
-                type="button"
-                className="close closeProfile"
-                onClick={() => {
-                    setChat('');
-                    if(window.outerWidth<=800){
-                        setGo('')
-                    }
-                }}
-                aria-label="Close"
-            >
-                <span aria-hidden="true">&times;</span>
-            </button>
-            <img src={reciever.avatar_url} alt="" className="conversationAvatar" />
-            <div className="conversationUserDetails">
-                <span style={{ fontSize: '20px', fontWeight: 'bold' }}>{reciever.username} {reciever.isPremium && <sup title='Premium member' className="badge rounded-pill d-inline premiumBadge mx-1">Premium</sup>} </span>
-                <span>{reciever.last_seen != 'online' ? `last seen ${new Date(parseInt(reciever.last_seen)).getDate() == new Date().getDate() ? "today" : new Date(parseInt(reciever.last_seen)).getDate() == new Date().getDate() - 1 ? "yesterday" : " was " + new Date(parseInt(reciever.last_seen)).toLocaleDateString()} at ${new Date(parseInt(reciever.last_seen)).toLocaleTimeString()}` : <font color='white'>Online</font>}</span>
+        <div className='conversationTopBar'>
+            <div className="conversationDetails">
+                <button
+                    type="button"
+                    className="close closeProfile"
+                    onClick={() => {
+                        setChat('');
+                        if (window.outerWidth <= 800) {
+                            setGo('')
+                        }
+                    }}
+                    aria-label="Close"
+                >
+                    <span aria-hidden="true">&times;</span>
+                </button>
+                <img src={reciever.avatar_url} alt="" className="conversationAvatar" />
+                <div className="conversationUserDetails">
+                    <span style={{ fontSize: '20px', fontWeight: 'bold' }}>{reciever.username} {reciever.isPremium && <sup title='Premium member' className="badge rounded-pill d-inline premiumBadge mx-1">Premium</sup>} </span>
+                    <span> {isTyping ? "Typing..." : reciever.last_seen != 'online' ? `last seen ${new Date(parseInt(reciever.last_seen)).getDate() == new Date().getDate() ? "today" : new Date(parseInt(reciever.last_seen)).getDate() == new Date().getDate() - 1 ? "yesterday" : " was " + new Date(parseInt(reciever.last_seen)).toLocaleDateString()} at ${new Date(parseInt(reciever.last_seen)).toLocaleTimeString()}` : <font color='white'>Online</font>}</span>
+                </div>
+            </div>
+            <div className="conversationMenu">
+                <img src={vidCall} onClick={() => setChat({ type: 'videoCall', data: { to: reciever._id, from: userData.value._id, conversationName: `CONVERSATION_${userData.value._id}` } })} alt="" />
+                <img src={menu} alt="" />
             </div>
         </div>
     )
 
 };
 
-const MessageRenderer = ({reciever}) => {
-    const currentChat = useSelector(state => state.currentChat)
+const MessageRenderer = ({ reciever}) => {
     const userData = useSelector(state => state.user)
-    const socket=useSocket()
+    const socket = useSocket()
     const doodleRef = useRef()
+    const conversation = useSelector(state=>state.conversations)
     useEffect(() => {
+        console.log(conversation)
         doodleRef.current.scrollTop = doodleRef.current.scrollHeight
-        socket.emit('markMsgSeen',{userId:reciever._id})
-    }, [currentChat])
+        socket.emit('markMsgSeen', { userId: reciever._id })
+    }, [conversation])
     return (
         <div className="chatinInterface">
             <div className="doodles" ref={doodleRef}>
-                {currentChat.value.length ? (
-                    currentChat.value.map((el, ind) => {
+                {conversation?.value?.messages?.length ? (
+                    conversation?.value.messages.map((el, ind) => {
                         return (
                             el.senderId === userData.value._id ? (
                                 <div key={ind} className="message rightMessage">
@@ -96,20 +115,20 @@ const MessageRenderer = ({reciever}) => {
     )
 }
 
-function ChatingInterface({setGo,setChat,chat}) {
+function ChatingInterface({ setGo, setChat, chat }) {
     const socket = useSocket()
     const userData = useSelector((state) => state.user);
-    const callState = useSelector(state => state.call)
-    const [reciever, setReciever] = useState(null);
+    const [reciever,setReciever] = useState(null)
     const [message, setMessage] = useState('');
     const [isSending, setSending] = useState(false)
     const [openEmoji, setOpenEmoji] = useState(false)
-    const [isLoading,setLoading]=useState(true)
+    const [isLoading, setLoading] = useState(true)
     const [file, setFile] = useState(false)
     const inputRef = useRef();
-    const fileInputRef = useRef();
-    const navigate = useNavigate()
+    const msg = useSelector(state=>state.opponent)
     const dispatch = useDispatch()
+    const conversation = useSelector(state=>state.conversations)
+
     useEffect(() => {
         if (chat.type == 'chat') {
             document.addEventListener('keyup', (e) => {
@@ -135,7 +154,7 @@ function ChatingInterface({setGo,setChat,chat}) {
                 inputRef.current.focus();
             }
             if (chat.type === 'chat') {
-                socket.emit('join-room',{senderId:userData.value._id,recieverId:chat.data})
+                socket.emit('join-room', { senderId: userData.value._id, recieverId: chat.data })
                 try {
                     const token = localStorage.getItem('SyncUp_Auth_Token');
                     const options = {
@@ -146,9 +165,9 @@ function ChatingInterface({setGo,setChat,chat}) {
                     }
                     Axios(options).then(async res => {
                         if (res.data.success) {
-                            setLoading(false)
                             setReciever(res.data.body);
                             const msgList = await GetMessages(res.data.body._id)
+                            console.log(msgList);
                             if (msgList?.length) {
                                 dispatch(setCurrentChat(msgList))
                             } else {
@@ -163,9 +182,7 @@ function ChatingInterface({setGo,setChat,chat}) {
                     console.error(error);
                     toast.error(error.message);
                 }
-            }else if(!chat.type){
-                setLoading(false)
-            }
+            } 
         };
         fetchUserData();
 
@@ -196,7 +213,7 @@ function ChatingInterface({setGo,setChat,chat}) {
                     dispatch(markDelivered(userData.value._id))
                 }
                 socket.on('msgDelivered', handleDelivered)
-                
+
                 socket.on('msgSeen', () => {
                     dispatch(markSeen(userData.value._id))
                 })
@@ -211,6 +228,7 @@ function ChatingInterface({setGo,setChat,chat}) {
             setMessage('')
         }
         else {
+            socket.emit('typingStarted', { to: reciever._id, from: userData.value._id })
             if (e.target.value.trim()) {
                 setMessage(e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1));
             }
@@ -258,12 +276,12 @@ function ChatingInterface({setGo,setChat,chat}) {
         }
     }
     const hangUpCall = () => {
-        socket.emit('onHangup',chat.data)
-        setChat({ type: 'chat',data:chat.data.to })
+        socket.emit('onHangup', chat.data)
+        setChat({ type: 'chat', data: chat.data.to })
     }
     const declineCall = () => {
-        socket.emit('onDeclined',chat.data)
-        setChat({ type: 'chat',data:chat.data.from })
+        socket.emit('onDeclined', chat.data)
+        setChat({ type: 'chat', data: chat.data.from })
     }
     const removeLastEmoji = () => {
         const regex = emojiRegex();
@@ -275,9 +293,26 @@ function ChatingInterface({setGo,setChat,chat}) {
             setMessage((msg) => msg.slice(0, -1));
         }
     };
+    const props = {
+        chat,
+        setChat,
+        reciever,
+        setGo,
+        setMessage,
+        setOpenEmoji,
+        handleFileInput,
+        handleInputChange,
+        removeLastEmoji,
+        inputRef,
+        isSending,
+        setSending,
+        sendMessage,
+        message,
+        sendMedia
+    }
     return (
         <>
-            {isLoading?<h1>LOaing...</h1>:(!chat.type && userData.value.isPremium) && (
+            {(!chat.type && userData.value.isPremium) && (
                 <div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center', color: 'white' }}>
                     <h1>Premium user</h1>
                 </div>
@@ -285,29 +320,26 @@ function ChatingInterface({setGo,setChat,chat}) {
             {(!userData.value.isPremium && !chat.type) && <Ads />}
             {(chat.type == 'chat' && reciever) && (
                 <div className="conversationContainer">
-                    <div className="conversationTopBar">
-                        <ConversationDetails setGo={setGo} setChat={setChat} reciever={reciever} />
-                        <div className="conversationMenu">
-                            <img src={vidCall} onClick={() => setChat({ type: 'videoCall', data: {to:reciever._id,from:userData.value._id,conversationName:`CONVERSATION_${userData.value._id}`} })} alt="" />
-                            <img src={menu} alt="" />
-                        </div>
-                    </div>
-                    <MessageRenderer reciever={reciever} />
-                    <div className="conversationBottom">
-                        <img src={emoji} alt='not' onClick={() => setOpenEmoji(true)} />
-                        <input onKeyDown={(e) => (e.key == 'Backspace' && message.length < 3) && removeLastEmoji(e)} onChange={handleInputChange} onKeyUp={(e) => e.key == 'Enter' ? sendMessage() : false} value={message} type="text" ref={inputRef} placeholder='Type a message...' className="msgInput text-capitalize" />
-                        <img src={add} onClick={() => fileInputRef.current.click()} alt="" />
-                        <input type="file" onInput={handleFileInput} ref={fileInputRef} accept={"image/*, video/*"} hidden id="" />
-                        <img src={!message ? (!isSending ? mic : timer) : (!isSending ? send : timer)} onClick={!message ? () => alert('mic') : sendMessage} alt="" />
-                    </div>
+                    <ConversationTopBar {...props} />
+                    {conversation.value.length && <MessageRenderer {...props} />}
+                    <ConversationBottom {...props} />
                 </div>
             )}
             {openEmoji && <Emoji setMessage={setMessage} setOpenEmoji={setOpenEmoji} />}
-            {(chat.type == 'videoCall') && (
-                <VidConfig declineCall={declineCall} chat={chat} hangUpCall={hangUpCall} />
-            )}
+            {(chat.type == 'videoCall') &&<VidConfig declineCall={declineCall} chat={chat} hangUpCall={hangUpCall} />
+}
         </>
     );
 }
-
+const ConversationBottom = function ({ message, removeLastEmoji, sendMessage, handleFileInput, handleInputChange, isSending, setSending, setOpenEmoji, inputRef, fileInputRef }) {
+    return (
+        <div className="conversationBottom">
+            <img src={emoji} alt='not' onClick={() => setOpenEmoji(true)} />
+            <input onKeyDown={(e) => (e.key == 'Backspace' && message.length < 3) && removeLastEmoji(e)} onInput={handleInputChange} onKeyUp={(e) => e.key == 'Enter' ? sendMessage() : false} value={message} type="text" ref={inputRef} placeholder='Type a message...' className="msgInput text-capitalize" />
+            <img src={add} onClick={() => fileInputRef.current.click()} alt="" />
+            <input type="file" onInput={handleFileInput} ref={fileInputRef} accept={"image/*, video/*"} hidden id="" />
+            <img src={!message ? (!isSending ? mic : timer) : (!isSending ? send : timer)} onClick={!message ? () => alert('mic') : sendMessage} alt="" />
+        </div>
+    )
+}
 export default ChatingInterface;
diff --git a/client/src/Components/Chats/Chatlist/currentList.jsx b/client/src/Components/Chats/Chatlist/currentList.jsx
index 5bd086d..79426dc 100644
--- a/client/src/Components/Chats/Chatlist/currentList.jsx
+++ b/client/src/Components/Chats/Chatlist/currentList.jsx
@@ -5,7 +5,6 @@ function CurrentList({ setChat,setGo}) {
     const conversations = useSelector(state=>state.conversations)
     const setConversation = function(id){
         setChat({type:'chat',data:id})
-        console.log(window.outerWidth);
         if(window.outerWidth<=800){
             setGo('MobileChat')
         }
diff --git a/client/src/Components/CheckLogin/userRoute.js b/client/src/Components/CheckLogin/userRoute.js
index a3396f6..2469e44 100644
--- a/client/src/Components/CheckLogin/userRoute.js
+++ b/client/src/Components/CheckLogin/userRoute.js
@@ -42,9 +42,6 @@ function IsAuth({ children }) {
                     localStorage.removeItem('SyncUp_Auth_Token')
                 }
             })
-            setTimeout(() => {
-                dispatch(hideLoading())
-            }, 1500);
         }
     }, []);
     return <>
diff --git a/client/src/Components/VideoCall/VideoCall.css b/client/src/Components/VideoCall/VideoCall.css
index af82f73..a6c24b8 100644
--- a/client/src/Components/VideoCall/VideoCall.css
+++ b/client/src/Components/VideoCall/VideoCall.css
@@ -17,6 +17,13 @@
 }
 .callOptions {
     padding: 10px;
+    background-color: #ED80FD;
+    width: 100%;
+    height: 100%;
+    display: flex;
+    justify-content: center;
+    align-items: center;
+    gap: 10px;
 }
 .selfStream{
     width: 200px;
@@ -34,17 +41,25 @@
 .opponentVideo {
     border-radius: 10px;
 }
+.userDetailsVidCall{
+    position: absolute;
+    top:10%;
+}
+.vidCallAvatar{
+    width: 150px;
+    border-radius: 100%;
+}
 .vidLoading {
     width: 100%;
     height: 100%;
     display: flex;
-    justify-content: center;
+    justify-content: flex-end;
     align-items: center;
     text-align: center;
     background-color: transparent;
     background-color: #ED80FD;
     flex-direction: column;
-    gap: 15px;
+    padding: 100px;
 }
 .vidLoading span {
     width: 50px;
diff --git a/client/src/Components/VideoCall/VideoCall.jsx b/client/src/Components/VideoCall/VideoCall.jsx
index 8b29d33..a2cf643 100644
--- a/client/src/Components/VideoCall/VideoCall.jsx
+++ b/client/src/Components/VideoCall/VideoCall.jsx
@@ -9,15 +9,13 @@ import axios from 'axios';
 import toast from 'react-hot-toast';
 import { setChat } from '../../Context/userContext';
 
-function VideoCall({ hangUpCall, declineCall }) {
+function VideoCall(props) {
   const socket = useSocket()
-  const userData = useSelector(state => state.user)
-  const chat = useSelector(state => state.chat)
+  const [userData, setUserData] = useState({})
   const conversationRef = useRef(null);
-  const dispatch = useDispatch()
-  const [conversationName, setConversationName] = useState("")
-  const [isConnected, setConnected] = useState(false)
+  const [chat, setChat] = useState(props.chat)
   const [isLoaded, setLoaded] = useState(false)
+  const [localStream, setLocalStream] = useState(null)
   const callState = useSelector(state => state.call)
   const onStreamListChangedHandler = function (streamInfo) {
     if (streamInfo.listEventType === 'added' && streamInfo.isRemote) {
@@ -43,10 +41,30 @@ function VideoCall({ hangUpCall, declineCall }) {
     stream.removeFromDiv('opVideo', 'remote-media-' + stream.streamId)
   }
   useEffect(() => {
+    if (chat.isRecieved) {
+      setLoaded(true)
+    }
+    const id = chat.isRecieved ? chat.data.from : chat.data.to
+    if (id) {
+      const options = {
+        route: 'getUserInfo',
+        params: { userId: id },
+        headers: { Authorization: `Bearer ${localStorage.getItem('SyncUp_Auth_Token')}` },
+        crypto: true
+      }
+      Axios(options).then(res => {
+        if (res.data.success) {
+          setUserData(res.data.body)
+        } else {
+          toast.error(res.data.message)
+        }
+      })
+    }
     socket.on('callAccepted', () => {
-      alert('accepted')
-      setConnected(true)
-      initializeVideo()
+      setChat({ ...chat, isAccepted: true })
+      initializeVideo().then(() => {
+        setLoaded(true)
+      })
     })
     socket.on('callEnded', (data) => {
       // const videos = document.querySelectorAll('video')
@@ -67,7 +85,7 @@ function VideoCall({ hangUpCall, declineCall }) {
       // })
     })
   }, [socket])
-  const initializeVideo = () => {
+  const initializeVideo = async () => {
 
     let localStream = null;
     const apikey = "58fe00be7be7c9805c1c0b98b195669a"
@@ -81,14 +99,11 @@ function VideoCall({ hangUpCall, declineCall }) {
 
       const conversation = session.getOrCreateConversation(conversationName, { meshOnlyEnabled: true })
 
-      setConversationName(conversation.getName())
-
       conversationRef.current = conversation
 
       conversation.on("streamListChanged", onStreamListChangedHandler)
       conversation.on("streamAdded", onStreamAddedHandler)
       conversation.on("streamRemoved", onStreamRemovedHandler)
-
       //Instantiate a local video stream object
       ua.createStream({
         constraints: {
@@ -97,13 +112,14 @@ function VideoCall({ hangUpCall, declineCall }) {
         }
       })
         .then((stream) => {
-          localStream = stream;
+          let strm = stream
           stream.attachToElement(document.getElementById('local-video-stream'));
           conversation.join()
             .then((response) => {
               conversation
-                .publish(localStream)
-                .then((stream) => {
+                .publish(strm)
+                .then(() => {
+                  setLocalStream(stream)
                   console.log('local published')
                 })
                 .catch((err) => {
@@ -119,24 +135,26 @@ function VideoCall({ hangUpCall, declineCall }) {
   }
   const acceptCall = function () {
     socket.emit('userAcceptedACall', chat.data)
-    setConnected(true)
-    setLoaded(true)
+    setChat({ ...chat, isAccepted: true })
     initializeVideo()
-
   }
   return (
     <>
+      {userData && <div className='userDetailsVidCall'>
+        <img src={userData.avatar_url} className='vidCallAvatar' alt="" />
+        <h4>{userData.username}</h4>
+        </div>}
       {callState.value && <div className="videoContainer">
         {isLoaded ? <>
           <div className="callOptions">
-            {chat.isRecieved && !callState.value.isAccepted ?
+            {chat.isRecieved && !chat.isAccepted ?
               <>
                 <button className="Accept" onClick={acceptCall} >Accept</button>
-                <button className="Decline" onClick={declineCall} >Decline</button>
+                <button className="Decline" onClick={props.declineCall} >Decline</button>
               </>
               :
               <>
-                <button onClick={hangUpCall}> <img src={imgDecline} alt="" /> </button>
+                <button onClick={props.hangUpCall}> <img src={imgDecline} alt="" /> </button>
               </>}
           </div>
           <div className="callUi">
@@ -150,7 +168,7 @@ function VideoCall({ hangUpCall, declineCall }) {
           </div></> : <div className="vidLoading">
           <span className="spinner" />
           <p className='text-light' >Connecting...</p>
-          <button className='btnHangup' onClick={hangUpCall}> <img src={imgDecline} alt="" /></button>
+          <button className='btnHangup' onClick={props.hangUpCall}> <img src={imgDecline} alt="" /></button>
 
         </div>}
       </div>
diff --git a/client/src/Context/userContext.js b/client/src/Context/userContext.js
index 327d61c..8b01e01 100644
--- a/client/src/Context/userContext.js
+++ b/client/src/Context/userContext.js
@@ -39,7 +39,7 @@ const currentchat = createSlice({
       state.value = action.payload;
     },
     addNewMessage: (state, action) => {
-      state.value = [...state.value.filter(el=>el.sentTime!=action.payload.sentTime),action.payload];
+      state.value = [...state.value.filter(el => el.sentTime != action.payload.sentTime), action.payload];
     },
     markSeen: (state, action) => {
       state.value = state.value.map(el => {
@@ -59,7 +59,7 @@ const currentchat = createSlice({
         }
       })
     },
-    markSent:(state, action) => {
+    markSent: (state, action) => {
       state.value = state.value.map(el => {
         if (el.senderId == action.payload) {
           return { ...el, isSent: true }
@@ -84,38 +84,65 @@ const totalConversations = createSlice({
 });
 const callState = createSlice({
   name: "callState",
-  initialState:  {value:{}} ,
+  initialState: { value: {} },
   reducers: {
     setCallData: (state, action) => {
-      state.value = {...state.value,...action.payload}
+      state.value = { ...state.value, ...action.payload }
     },
   },
 });
 const chatState = createSlice({
-  name:"chatState",
-  initialState:{type:null,data:null},
-  reducers:{
-    setChat:(state,action)=>{
-      state=action.payload
+  name: "chatState",
+  initialState: { type: null, data: null },
+  reducers: {
+    setChat: (state, action) => {
+      state = action.payload
+    }
+  }
+})
+
+const adsData = createSlice({
+  name: 'ads',
+  initialState: { value: {} },
+  reducers: {
+    setAds: (state, action) => {
+      state.value = action.payload
+    }
+  }
+})
+
+const currentConversation = createSlice({
+  name: "currentConversation",
+  initialState: { value: { userData: {}, messages: [] } },
+  reducers: {
+    setMessages: (state, action) => {
+      state.messages = action.payload
+    },
+    setOpponent:(state,action)=>{
+      state.userData = action.payload
     }
   }
 })
 
 export const { setConversations, resetConversation } = totalConversations.actions;
-export const { setCurrentChat, markDelivered, markSeen, addNewMessage,markSent } = currentchat.actions;
+export const { setCurrentChat, markDelivered, markSeen, addNewMessage, markSent } = currentchat.actions;
 export const { showLoading, hideLoading } = progressContext.actions;
+export const { setAds } = adsData.actions
 export const { setUserData } = userSlice.actions;
 export const { setChat } = chatState.actions;
 export const { setCallData } = callState.actions;
 export const { setAuthConfig } = adminContext.actions
+export const {setMessages,setOpponent} = currentConversation.actions
 const rootReducer = combineReducers({
   progress: progressContext.reducer,
   user: userSlice.reducer,
   admin: adminContext.reducer,
   currentChat: currentchat.reducer,
   conversations: totalConversations.reducer,
-  call:callState.reducer,
-  chat:chatState.reducer
+  call: callState.reducer,
+  chat: chatState.reducer,
+  ads: adsData.reducer,
+  opponent:currentConversation.reducer
 });
 export const store = configureStore({
   reducer: rootReducer,
diff --git a/client/src/index.js b/client/src/index.js
index e5ad842..14a4519 100644
--- a/client/src/index.js
+++ b/client/src/index.js
@@ -9,8 +9,7 @@ import { store } from './Context/userContext'
 import { Toaster } from 'react-hot-toast';
 import { GoogleOAuthProvider } from '@react-oauth/google';
 import { SocketProvider } from './Context/socketContext';
-import LogRocket from 'logrocket';
-LogRocket.init('v2np8t/syncup');
+
 
 const root = ReactDOM.createRoot(document.getElementById('root'));
 root.render(
diff --git a/client/src/main/Chats/Chats.js b/client/src/main/Chats/Chats.js
index 31d0298..4c77075 100644
--- a/client/src/main/Chats/Chats.js
+++ b/client/src/main/Chats/Chats.js
@@ -7,7 +7,7 @@ import Chatslst from '../../Components/Chats/Chatlist/Chatlist'
 import crypto from 'crypto-js'
 import Profile from '../../Components/Profile/Profile'
 import { useDispatch, useSelector } from 'react-redux'
-import { addNewMessage, markDelivered, markSeen, resetConversation, setCallData, setConversations, setCurrentChat, setUserData } from '../../Context/userContext'
+import { addNewMessage, hideLoading, markDelivered, markSeen, resetConversation, setAds, setCallData, setConversations, setCurrentChat, setOpponent, setUserData } from '../../Context/userContext'
 import Notification from '../../Components/Chats/Notifications/Notification'
 import { useNavigate } from 'react-router-dom'
 import toast from 'react-hot-toast'
@@ -18,23 +18,63 @@ import GetMessages from './getMessages'
 import Axios from '../../interceptors/axios'
 import { useSocket } from '../../Context/socketContext'
 import { io } from 'socket.io-client'
+import Loader from '../../Components/Chats/Loader/Loader'
+
 
 const Chatlist = React.memo(Chatslst)
 const ChatingInterface = React.memo(chatingUi)
 
 function Chats() {
     const [searchResult, setSearchData] = useState([])
+    const ads = useSelector(state => state.ads)
     const socket = useSocket()
-    const [chat,setChat]=useState({type:null})
+    const [chat, setChat] = useState({ type: null })
+    const [isLoading, setLoading] = useState(true)
     const dispatch = useDispatch()
     const [go, setGo] = useState()
     const userData = useSelector(state => state.user)
     const history = useNavigate()
     useEffect(() => {
-        window.addEventListener('resize',()=>{
-            if(window.outerWidth <=800&&chat.type){
+        function a() {
+            if (userData.value._id) {
+                socket.emit('set-socketId', {
+                    userId: userData.value._id
+                })
+            }
+            GetChatList().then(res => {
+                dispatch(setConversations(res))
+                getAds()
+            })
+        }
+        a()
+        function getAds() {
+            const token = localStorage.getItem('SyncUp_Auth_Token')
+            if (token && !userData.value.isPremium) {
+                const options = {
+                    route: 'getAds',
+                    headers: { Authorization: `Bearer ${token}` },
+                    crypto: true
+                }
+                Axios(options).then(res => {
+                    if (res.data.success) {
+                        dispatch(setAds(res.data.body))
+                    } else {
+                        toast.error(res.data.message)
+                    }
+                    setTimeout(() => {
+                        setLoading(false)
+                    }, 500)
+
+                })
+            } else {
+                setLoading(false)
+            }
+
+        }
+        window.addEventListener('resize', () => {
+            if (window.outerWidth <= 800 && chat.type) {
                 setGo('MobileChat')
-            }else{
+            } else {
                 setGo('')
             }
         })
@@ -90,23 +130,13 @@ function Chats() {
             setChat({ type: 'videoCall', data, isRecieved: true })
             dispatch(setCallData({ userId: data.from, isRecieved: true, isAccepted: false, isEnded: false }))
         })
-        
+
         socket.on('userOffline', (data) => {
             toast.error(`User ${data.userName} is offline`)
             setChat({ type: null })
         })
 
-        async function a() {
-            if (userData.value._id) {
-                socket.emit('set-socketId', {
-                    userId: userData.value._id
-                })
-            }
-            const mes = await GetChatList()
-            dispatch(setConversations(mes))
-        }
-        a()
-     
+
     }, [])
     const handleSearch = useCallback(async (e) => {
         if (e.target.value.trim()) {
@@ -136,17 +166,20 @@ function Chats() {
         setGo
     }
     return (
-        <ChatBox rightComponent={go!='MobileChat'&&<ChatingInterface {...props} />}>
-            {go == `Profile` && <Profile setGo={setGo} />}
-            {go == `Notifications` && <Notification setChat={setChat} setGo={setGo} />}
-            {go=='MobileChat'&&chat.type&&<ChatingInterface {...props} />}
-            {!go &&
-                <>
-                    <TopBar handleSearch={handleSearch} setGo={setGo} />
-                    <ChatTabs activeTab={'Chats'} />
-                    <Chatlist setChat={setChat} setGo={setGo}  searchResult={searchResult} />
-                </>}
-        </ChatBox>
+        <>
+            {isLoading && <Loader />}
+            <ChatBox rightComponent={go != 'MobileChat' && <ChatingInterface {...props} />}>
+                {go == `Profile` && <Profile setGo={setGo} />}
+                {go == `Notifications` && <Notification setChat={setChat} setGo={setGo} />}
+                {go == 'MobileChat' && chat.type && <ChatingInterface {...props} />}
+                {!go &&
+                    <>
+                        <TopBar handleSearch={handleSearch} setGo={setGo} />
+                        <ChatTabs activeTab={'Chats'} />
+                        <Chatlist setChat={setChat} setGo={setGo} searchResult={searchResult} />
+                    </>}
+            </ChatBox>
+        </>
     )
 }
 
diff --git a/client/src/main/Chats/getMessages.js b/client/src/main/Chats/getMessages.js
index 33769b4..2152982 100644
--- a/client/src/main/Chats/getMessages.js
+++ b/client/src/main/Chats/getMessages.js
@@ -11,7 +11,6 @@ export default async function GetMessages(id) {
         crypto:true
     }
     const res =  await Axios(options)
-    console.log(res);
     return res.data.body
     
 }
diff --git a/install b/install
index 97a3bf6..794c077 100644
--- a/install
+++ b/install
@@ -11,5 +11,5 @@ elif [ "$1" = "both" ]; then
     cd client && npm i "$2"
     cd ../server && npm i "$2"
 else 
-    echo  "\nType argument is missing or invalid"
+    echo  "\nArgument(s) is missing or invalid"
 fi
diff --git a/server/config/mongo.js b/server/config/mongo.js
index 8c77239..cb0f9b9 100644
--- a/server/config/mongo.js
+++ b/server/config/mongo.js
@@ -1,9 +1,14 @@
 const mongoose = require('mongoose')
 require('dotenv').config()
-module.exports=async function (){
-    mongoose.connect(process.env.MONGODB_URI).then(con=>{
-        console.log('Mongodb connected');
-    }).catch(err=>{
-        console.log(err)
-    })
+module.exports = async function () {
+    try {
+        mongoose.connect(process.env.MONGODB_URI).then(con => {
+            console.log('Mongodb server connected');
+        })
+    }catch(err){
+        mongoose.connect('mongodb://127.0.0.1:27017/SyncUp').then(con => {
+            console.log('Mongodb local connected');
+        })
+    }
+    
 }
\ No newline at end of file
diff --git a/server/config/socket.io.js b/server/config/socket.io.js
index 4a74636..d5873bd 100644
--- a/server/config/socket.io.js
+++ b/server/config/socket.io.js
@@ -114,6 +114,18 @@ function intializeSocket(server) {
                     socket.join(newRoom.roomId)
                 }
             })
+            socket.on('typingStarted',async(data)=>{
+                const roomData = await Room.findOne({ senderId: { $in: [data.from, data.to] }, recieverId: { $in: [data.from, data.to] } })
+                const connectData = await Connection.findOne({userId:data.to})
+                if(roomData){
+                    socket.to(roomData.roomId).emit('typing')
+                    socket.to(connectData.socketId).emit('typing')
+                    setTimeout(() => {
+                        socket.to(connectData.socketId).emit('typingEnd')
+                        socket.to(roomData.roomId).emit('typingEnd')
+                    }, 1000);
+                }
+            })
             socket.on('disconnect', async (socket) => {
                 await Connection.findOneAndDelete({ socketId: socket.id })
             });
diff --git a/server/controller/messageController.js b/server/controller/messageController.js
index 70301a5..ca164fa 100644
--- a/server/controller/messageController.js
+++ b/server/controller/messageController.js
@@ -60,6 +60,7 @@ const getConversation = async (req, res) => {
                     if(connectData){
                         req.io.to(connectData.socketId).emit('msgSeen')
                     }
+        
                     const encData = encryptData(messageData)
                     res.json({ success: true, isExists: true, body: encData })
                 } else {
